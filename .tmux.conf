# set -g default-terminal "xterm-256color"
set -g default-terminal "tmux-256color"
# Enable TrueColor/italic/256color in xterm family
# sitm explicit assignment is required to enable
# italic even it is assigned in 'tmux-256color'.
set -ga terminal-overrides ',xterm-256color:Tc'
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'
# Force VT100 alternate character set
# https://qiita.com/yanma/items/2644e6db6f3bcf249690
set -sa terminal-overrides ',*:U8=0'

#  ステータスバーをトップに配置する
set-option -g status-position top

# ステータスバーの設定
# foreground #c5cdd9
# background #2b2d3a
# color0     #363a4e
# color8     #363a4e
# color1     #ec7279
# color9     #ec7279
# color2     #a0c980
# color10    #a0c980
# color3     #deb974
# color11    #deb974
# color4     #6cb6eb
# color12    #6cb6eb
# color5     #d38aea
# color13    #d38aea
# color6     #5dbbc1
# color14    #5dbbc1
# color7     #c5cdd9
# color15    #c5cdd9

set -g status "on"
set -g status-justify "centre"
set -g status-left-style "none"
set -g message-command-style "fg=#b7bec9,bg=#3e4249"
set -g status-right-style "none"
set -g pane-active-border-style "fg=#73b3e7"
set -g status-style "none,bg=#2d2f33"
set -g message-style "fg=#b7bec9,bg=#3e4249"
set -g pane-border-style "fg=#3e4249"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-style "none,fg=#73b3e7,bg=#2d2f33"
setw -g window-status-separator ""
setw -g window-status-style "none,fg=#b7bec9,bg=#2d2f33"
set -g status-left "#[fg=#d38aea]  #S "
set -g status-right "#[fg=#2d2f33,bg=#2d2f33,nobold,nounderscore,noitalics] #{sysstat_mem} | #{sysstat_cpu} | #[fg=#5dbbc1]  #[fg=#a0c980]%Y/%m/%d(%a) %R #{prefix_highlight}"
setw -g window-status-format "#[fg=#b7bec9,nobold,nounderscore,noitalics] #I  #W "
setw -g window-status-current-format "#[fg=#262729,bg=#73b3e7,bold] #I  #W "


## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set  -g visual-activity on

set-option -g focus-events on

# prefixキーをC-qに変更
# set -g prefix C-a

# C-bのキーバインドを解除
# unbind C-b

# bell
# set-window-option -g window-status-bell-style fg=colour235,bg=colour160 #base02, red

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'    #Prefix C-sでセッション保存 C-rでセッションリロード
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-yank'

set -g @resurrect-processes 'false'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '1'

# {{{tmux-plugin-sysstat
set -g @sysstat_cpu_view_tmpl '#[fg=#5dbbc1]#[default] #[fg=#{cpu.color}]#{cpu.pused}#[default]'
set -g @sysstat_mem_view_tmpl '#[fg=#5dbbc1]#[default] #[fg=#{mem.color}]#{mem.pused}#[default]'
#[fg=#{mem.color},bg=#363a4e]#{mem.pused}#[bg=#363a4e]'
set -g status-interval 3
# }}}
# {{{tmux-prefix-highlight
set -g @prefix_highlight_fg 'colour00'
set -g @prefix_highlight_bg '#ec7279'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=colour00,bg=colour05,bold'
set -g @prefix_highlight_prefix_prompt 'PREFIX'
set -g @prefix_highlight_copy_prompt 'COPY'
# }}}
set -g set-clipboard on
set-option -s escape-time 10

# ウィンドウのインデックスを1から始める
set -g base-index 1

# ペインのインデックスを1から始める
setw -g pane-base-index 1

set-option -g history-limit 10000

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# ペインを縦に分割する
bind v split-window -h

# ペインを横に分割する
bind x split-window -v
#  ペインの破棄
bind q kill-pane

# session の作成, 移動
bind C new-session
bind N switch-client -n
bind P switch-client -p

bind c new-window -c "#{pane_current_path}"
bind n next-window
bind p previous-window
bind W kill-window

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind C-h select-window -t :-
bind C-l select-window -t :+

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind a choose-tree
bind s choose-session
bind f display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
bind w choose-tree -w

# クリップボード共有
# for Mac
# brew install reattach-to-user-namespace
if-shell "uname | grep -q Darwin" \
  'set-option -g default-command "reattach-to-user-namespace -l $SHELL"'
if-shell "uname | grep -q Darwin" \
  'bind-key    -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'
if-shell "uname | grep -q Darwin" \
  'bind-key    -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'

# for Linux
if-shell 'type xclip' \
  'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"'
if-shell 'type xclip' \
  'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"'

setw -g mode-keys vi
bind-key    -T copy-mode-vi v     send-keys -X begin-selection

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
run '~/.tmux/plugins/tpm/tpm'
