[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'

[[plugins]]
repo = 'Shougo/neocomplete.vim'
if = 'has("lua")'
on_i = 1

# vim8用
[[plugins]]
repo = 'roxma/nvim-yarp'
if = "!has('nvim')"

# vim8用
[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = "!has('nvim')"

[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("nvim")'
hook_add = '''
let g:deoplete#enable_at_startup = 1
let g:deoplete#auto_complete_delay = 0
let g:deoplete#auto_complete_start_length = 1
let g:deoplete#enable_camel_case = 0
let g:deoplete#enable_ignore_case = 0
let g:deoplete#enable_refresh_always = 0
let g:deoplete#enable_smart_case = 1
let g:deoplete#omni#input_patterns = get(g:,'deoplete#omni#input_patterns',{})
let g:deoplete#omni#functions = get(g:,'deoplete#omni#functions',{})

let g:python3_host_prog = '/Users/takuma/.pyenv/shims/python3'
let g:python_host_prog = '/Users/takuma/.pyenv/shims/python'
'''

[[plugins]]
repo = 'Shougo/neosnippet'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'delphinus35/typescript-vim'
rev  = 'colorize-template-strings'

[[pulugins]]
repo = 'Shougo/neoinclude.vim'

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
hook_add = '''
nnoremap <Space>sa :<C-u>CtrlP<Space>
nnoremap <Space>sb :<C-u>CtrlPBuffer<CR>
nnoremap <Space>sd :<C-u>CtrlPDir<CR>
nnoremap <Space>sp :<C-u>CtrlP<CR>
nnoremap <Space>sl :<C-u>CtrlPLine<CR>
nnoremap <Space>sm :<C-u>CtrlPMRUFiles<CR>
nnoremap <Space>sq :<C-u>CtrlPQuickfix<CR>
nnoremap <Space>ss :<C-u>CtrlPMixed<CR>
nnoremap <Space>st :<C-u>CtrlPTag<CR>

let g:ctrlp_show_hidden = 1
let g:ctrlp_working_path_mode = 'ra'
'''

[[plugins]]
repo = 'elzr/vim-json'
if   = '''! has('kaoriya')'''

[[plugins]]
repo    = 'vim-airline/vim-airline'
depends = ['vim-airline-themes']

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]] # toml syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo =  'evidens/vim-twig'

[[plugins]]
repo =  'w0ng/vim-hybrid'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'

[[plugins]]
repo = 'altercation/vim-colors-solarized'

[[plugins]]
repo = 'majutsushi/tagbar.git'

[[plugins]]
repo = 'szw/vim-tags'

[[plugins]]
repo = 'KeitaNakamura/neodark.vim'

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
nnoremap <Space>gs :Gstatus<CR>
nnoremap <Space>ge :Gedit<CR>
nnoremap <Space>gd :Gdiff<CR>
nnoremap <Space>gb :Gblame<CR>
nnoremap <Space>gp :Gpush
nnoremap <Space>gb :Gblame<CR>
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'simeji/winresizer'

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
rev = 'next'
build = 'bash install.sh'
depends = ['deoplete.vim']
hook_add = '''
set hidden
set signcolumn=yes

let g:LanguageClient_serverCommands = {
    \ 'rust': ['~/.cargo/bin/rustup', 'run', 'stable', 'rls'],
    \ 'javascript': ['/usr/local/bin/javascript-typescript-stdio'],
    \ 'javascript.jsx': ['tcp://127.0.0.1:2089'],
    \ 'python': ['/Users/takuma/.pyenv/versions/3.5.1/bin/pyls'],
    \ 'php': ['php', '/Users/takuma/.config/composer/vendor/bin/php-language-server.php'],
    \ }

let g:LanguageClient_autoStart = 1
nnoremap <F5> :call LanguageClient_contextMenu()<CR>
" Or map each action separately
nnoremap <silent> K :call LanguageClient#textDocument_hover()<CR>
nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>
nnoremap <silent> <F2> :call LanguageClient#textDocument_rename()<CR>
'''


[[plugins]]
repo = 'othree/yajs.vim'
on_ft = 'javascript'

[[plugins]]
repo = 'othree/es.next.syntax.vim'
on_ft = 'javascript'

[[plugins]]
repo = 'othree/javascript-libraries-syntax.vim'
on_ft = 'javascript'

[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = 'javascript'

[[plugins]]
repo = 'cohama/lexima.vim'
